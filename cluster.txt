data("USArrests")      # Loading the data set
df <- scale(USArrests) # Scaling the data
# View the firt 3 rows of the data
head(df, n = 3)

kmeans(x, centers, iter.max = 10, nstart = 1)

library(factoextra)


fviz_nbclust(df, kmeans, method = "wss") +
    geom_vline(xintercept = 4, linetype = 2)

# Compute k-means with k = 4
set.seed(123)
km.res <- kmeans(df, 4, nstart = 25)


aggregate(USArrests, by=list(cluster=km.res$cluster), mean)


dd <- cbind(USArrests, cluster = km.res$cluster)
head(dd)


# Cluster number for each of the observations
km.res$cluster


# Cluster size
km.res$size


# Cluster means
km.res$centers



fviz_cluster(km.res, data = df,
             palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"), 
             ellipse.type = "euclid", # Concentration ellipse
             star.plot = TRUE, # Add segments from centroids to items
             repel = TRUE, # Avoid label overplotting (slow)
             ggtheme = theme_minimal()
             )



##########################   PAM #########################


data("USArrests")      # Load the data set
df <- scale(USArrests) # Scale the data
head(df, n = 3)        # View the firt 3 rows of the data



pam(x, k, metric = "euclidean", stand = FALSE)


library(factoextra)
library(cluster)


fviz_nbclust(df, pam, method = "silhouette")+
  theme_classic()


pam.res <- pam(df, 2)
print(pam.res)



dd <- cbind(USArrests, cluster = pam.res$cluster)
head(dd, n = 3)



# Cluster medoids: New Mexico, Nebraska
pam.res$medoids

# Cluster numbers
head(pam.res$clustering)


fviz_cluster(pam.res, 
             palette = c("#00AFBB", "#FC4E07"), # color palette
             ellipse.type = "t", # Concentration ellipse
             repel = TRUE, # Avoid label overplotting (slow)
             ggtheme = theme_classic()
             







########### H Cluster #####################


# Compute hierarchical clustering
res.hc <- USArrests %>%
  scale() %>%                    # Scale the data
  dist(method = "euclidean") %>% # Compute dissimilarity matrix
  hclust(method = "ward.D2")     # Compute hierachical clustering
# Visualize using factoextra
# Cut in 4 groups and color by groups
fviz_dend(res.hc, k = 4, # Cut in four groups
          cex = 0.5, # label size
          k_colors = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
          color_labels_by_k = TRUE, # color labels by groups
          rect = TRUE # Add rectangle around groups
          )



#h-clusters
hcls=hclust(dist(sub))
plot(hcls)
clust1$hcls1=cutree(hcls,4)
plot(clust1$hcls1)
View(clust)